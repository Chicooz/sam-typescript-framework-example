openapi: 3.0.0
info:
  description: example.contracts.Api
  version: 4.4-oas3
  title: testapp API
paths:
  /login:
    post:
      summary: Authenticates a user
      description: Exchanges user name password for a signed JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: The signed JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid Authentication Details
  /createContract:
    post:
      summary: Create new contract
      description: Create new contract endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contractName:
                  type: string
                templateID:
                  type: string
                userId:
                  type: string
      responses:
        '200':
          description: Contract ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  ContractID:
                    type: string
  /getContract:
    get:
      summary: Retrieves contract by id 
      description: Get Contract endpoint
      parameters:
        - $ref: '#/components/parameters/contractID'
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: string
                  contractName:
                    type: string
                  templateID:
                    type: string
                  contractID:
                    type: string
        '204':
          $ref: '#/components/responses/204'
        '403':
          $ref: '#/components/responses/403'
  /getContractIDs:
    get:
      summary: Retrieves All contracts ids 
      description: Get ContractIDs endpoint
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contractID:
                      type: string
        '204':
          $ref: '#/components/responses/204'
        '403':
          $ref: '#/components/responses/403'
 
components:
  responses:
    '204':
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/204'
    '403':
      description: Unauthorized Error 403
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/E403'
    '404':
      description: not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404'   
  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    E403:
      type: object
      properties:
        statusCode:
          type: number
          example: 403
    '204':
      type: object
      properties:
        statusCode:
          type: number
          example: 204
    '404':
      type: object
      properties:
        statusCode:
          type: number
          example: 404
  parameters:
    contractID:
      in: query
      required: true
      name: contractID
      schema:
        type: string